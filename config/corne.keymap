/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LG(TAB)  &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U            &kp I      &kp O    &kp P     &kp LBKT
&kp LC(ESC)  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J            &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT    &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M            &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_BRACKET
                           &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &lt 2 BACKSPACE  &lt 3 DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1     &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11        &kp F12
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9   &kp N0         &kp MINUS
&trans     &none   &none   &none   &none   &none     &none   &none   &none   &trans   &kp BACKSLASH  &kp EQUAL
                           &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &msc SCRL_UP    &mkp MB1        &mmv MOVE_UP    &mkp MB2         &kp K_MUTE      &none   &none     &kp UP    &none      &kp PG_UP  &kp HOME
&none  &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp C_VOL_UP    &none   &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &kp END
&none  &none           &none           &mkp MB3        &trans           &kp C_VOL_DN    &none   &none     &none     &none      &none      &none
                                       &trans          &trans           &trans          &trans  &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR_ALL  &none         &none         &none         &none         &none           &none   &kp N7  &kp N8  &kp N9  &kp ASTERISK  &kp MINUS
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &kp N4  &kp N5  &kp N6  &kp EQUAL     &kp PLUS
&bt BT_PRV      &bt BT_NXT    &none         &none         &none         &none           &none   &kp N1  &kp N2  &kp N3  &kp PERIOD    &kp ENTER
                                            &trans        &trans        &trans          &trans  &kp N0  &trans
            >;
        };
    };
};
